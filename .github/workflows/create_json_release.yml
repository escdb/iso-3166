name: Create Release on Merge
on:
  push:
    branches:
      - main  # Triggered whenever something is pushed on main (force or no force)

permissions:
  contents: write
  packages: write

jobs:
  check-if-release-needed:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Get previous tag
        id: previoustag
        uses: WyriHaximus/github-action-get-previous-tag@v1
        with:
          fallback: first_tag
      - name: Check for JSON changes since last tag
        id: check_changes
        run: |
          echo "Checking for changes in /regions/iso or /regions/extra..."
          changes=$(git diff --name-only ${{ steps.previoustag.outputs.tag }}...HEAD)
          if [[ "$changes" =~ (regions/iso/.+\.json|regions/extra/.+\.json) ]]; then
            echo "Relevant JSON changes found."
          else
            echo "No relevant JSON changes since the last tag."
            exit 1
          fi
  create-release:
    needs: check-if-release-needed
    if: success()
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        # Most recent Python version as of 2024-12-29.
        with:
          python-version: '3.13'
      # Code does not have dependencies. Otherwise, would need a step here to `pip install` stuff.
      - name: Execute merge parsing script.
        run: python .scripts/parse_release.py
      - name: set date
        run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
      - name: set short commit SHA
        run: echo "COMMIT_SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
      - name: Output proposed tag.
        run: echo "${{ env.date }}-${{ env.COMMIT_SHORT_SHA }}"
      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "${{ env.date }}-${{ env.COMMIT_SHORT_SHA }}"
          name: Release ${{ env.date }}, commit ${{ env.COMMIT_SHORT_SHA }}
          files: iso_3166_data.json
          token: ${{ secrets.GITHUB_TOKEN }}
